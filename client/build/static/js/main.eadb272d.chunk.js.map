{"version":3,"sources":["helpers/auth.js","assets/logo.png","components/Navbar.js","components/PlantTile.js","components/Home.js","auth/Login.js","auth/Register.js","auth/Auth.js","components/Profile.js","components/Title.js","components/About.js","components/Resources.js","components/Footer.js","weather/CurrentWeather.js","weather/WeekWeather.js","weather/WeatherJobs.js","components/Weather.js","components/EditUserProfile.js","components/PlantWishList.js","components/PlantShow.js","components/ReactPayPal.js","components/Paypal.js","components/NewPlant.js","App.js","index.js"],"names":["getTokenFromLocalStorage","window","localStorage","getItem","getPayloadFromToken","token","parts","split","length","JSON","parse","atob","userIsAuthenticated","payload","Math","round","Date","now","exp","MyNavbar","history","useHistory","Navbar","className","bg","expand","Brand","href","src","logo","width","height","Container","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","onClick","removeItem","push","location","reload","PlantTile","props","to","plant_name","type","subspecies","image","Home","useState","plantData","setPlantData","thisDate","setThisDate","difficulty","setDifficulty","rightPlants","setRightPlants","sow","setSow","planting","setPlanting","harvest","setHarvest","randomPlants","setRandomPlants","monthNames","useEffect","a","axios","get","response","data","console","log","randomNums","i","num","floor","random","includes","coolPlants","filter","item","index","getData","Carousel","map","plant","alt","Caption","Form","Label","Control","as","onChange","event","Number","target","value","FormControl","placeholder","aria-label","aria-describedby","searchList","toUpperCase","Table","responsive","toLocaleString","month","sow_month","getMonth","plant_month","harvest_month","Login","email","password","formData","setFormData","showA","setShowA","handleChange","newFormData","name","handleSubmit","preventDefault","post","setItem","sub","onSubmit","Group","controlId","Button","Row","Toast","show","onClose","Header","Body","Register","first_name","last_name","username","showB","setShowB","errorMessage","setErrorMessage","reg","setReg","password_confirmation","Auth","Profile","userData","setUserData","savedPlantData","setSavedPlantData","saved_plants","wishlist","setUpdateWishlist","confirm","setConfirm","setFilter","itemsFromLocalStorage","setItemsFromLocalStorage","dateToComapre","setDateToCompare","needToWater","setNeedToWater","setInterval","headers","Authorization","getPlantsToWater","mappedGetPlantsToWater","getUser","saveToLocalStorage","today","plantId","plantName","wateringFrequency","splitItemsFromLocalStorage","numberTimestamp","parseInt","targetTimestamp","water","arrayOfSavedPlants","forEach","saved","filteredPlants","mappedFilteredArray","removeFromWishlist","filteredWishlistConst","parseFloat","newWishList","handleConfirm","put","handleCancel","trim","val","toLowerCase","Image","description","sunlight","soil_acidity","watering_frequency","Modal","aria-labelledby","centered","backdrop","keyboard","Dialog","closeButton","Title","Footer","variant","subtitles","subtitle","setSubtitle","size","About","Card","Img","fluid","Text","Resources","allowtransparency","allow","CurrentWeather","weather","xs","md","lg","Col","current","icon","main","temp","humidity","sunrise","toLocaleTimeString","sunset","WeekWeather","daily","dt","toLocaleDateString","day","feels_like","eve","max","min","WeatherJobs","weeklyDayTempAverage","reduce","acc","plantsToGerminateBasedOnTemp","germination_temperature","Weather","setWeather","forecast","setForecast","viewport","setViewport","inputLocationChoice","setInputLocationChoice","reveseGeoLocation","setReverseGeoLocation","setTimeout","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","features","geometry","coordinates","handleWeather","text","weatherForecastFunction","EditUserProfile","deleteCount","setDeleteCount","handleClose","handleDeleteConfirm","delete","profileimg","profile_image","disabled","goBack","PlantWishList","savedText","setSavedText","addToWishlist","PlantShow","onePlant","setOnePlant","params","useParams","getOnePlant","fertilizing_frequency","fertilizer_type","verified_by_admin","ReactPayPal","confirmedChekoutAmount","paid","setPaid","error","setError","paypalRef","React","useRef","paypal","Buttons","createOrder","actions","order","create","intent","purchase_units","amount","currency_code","onApprove","capture","onError","err","render","ref","Paypal","checkout","setCheckout","donateAmount","setDonateAmount","setConfirmedCheckoutAmount","toggleDonationAmount","setToggleDonationAmount","NewPlant","owner","success","setSuccess","handleMonth","rows","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eadb272d.chunk.js","sourcesContent":["export const getTokenFromLocalStorage = () => {\n  return window.localStorage.getItem('token')\n}\n\nexport const getPayloadFromToken = () => {\n  const token = getTokenFromLocalStorage()\n  if (!token) return false\n  const parts = token.split('.')\n  if (parts.length < 3) return false\n  return JSON.parse(atob(parts[1]))\n}\n\nexport const userIsOwner = userId => {\n  const payload = getPayloadFromToken()\n  if (!payload) return false\n  return userId === payload.sub\n}\n\nexport const userID = () => {\n  const payload = getPayloadFromToken()\n  if (!payload) return false\n  return payload.sub\n}\n\nexport const userIsAuthenticated = () => {\n  const payload = getPayloadFromToken()\n  if (!payload) return false\n  const now = Math.round(Date.now() / 1000)\n  return now < payload.exp\n}\n","export default __webpack_public_path__ + \"static/media/logo.127378de.png\";","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap'\nimport { userIsAuthenticated } from '../helpers/auth'\nimport logo from '../assets/logo.png'\n\nconst MyNavbar = () => {\n  const history = useHistory()\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('id')\n    history.push('/')\n    location.reload()\n  }\n\n  return (\n    <Navbar className=\"navbar\" bg=\"black\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">\n        <img src={logo}\n        width=\"100\"\n        height=\"40\"\n        className=\"d-inline-block align-top\"\n        />\n      </Navbar.Brand>\n      <Container className=\"nav-container\">\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link className=\"navbar-home\" href=\"/home\">Home</Nav.Link>\n          <Container className=\"box-of-fun\">\n            <NavDropdown title=\"Box of fun!\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"/weather\">Weather</NavDropdown.Item>\n              <NavDropdown.Item href=\"/resources\">Resources</NavDropdown.Item>\n              <NavDropdown.Item href=\"/paypal\">Paypal</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"/about\">About</NavDropdown.Item>\n            </NavDropdown>\n          </Container>\n        </Nav>\n        {!userIsAuthenticated() &&\n          <Nav.Link href=\"/auth\">Register/Login</Nav.Link>\n        }\n          {userIsAuthenticated() &&\n          <>\n          <Nav.Link href=\"/Profile\">Profile</Nav.Link>\n          <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n          </>\n}\n      </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default MyNavbar\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst PlantTile = (props) => {\n  return (\n<td>\n  <Link to={`/plants/${props.id}`}>\n          <p className=\"tile-title\">{props.plant_name}</p>\n          <p>{props.type}</p>\n          <p className=\"science\">{props.subspecies}</p>\n          <img src={props.image} className=\"plant-home-image\"></img>\n          </Link>\n        </td>\n  )\n}\nexport default PlantTile\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Table, Form, FormControl, Carousel, Container } from 'react-bootstrap'\nimport PlantTile from './PlantTile'\nimport { Link } from 'react-router-dom'\n\nexport const Home = () => {\n  const [plantData, setPlantData] = useState(null)\n  const [thisDate, setThisDate] = useState(null)\n  const [difficulty, setDifficulty] = useState(5)\n  const [rightPlants, setRightPlants] = useState(null)\n  const [sow, setSow] = useState(null)\n  const [planting, setPlanting] = useState(null)\n  const [harvest, setHarvest] = useState(null)\n  const [randomPlants, setRandomPlants] = useState(null)\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n  useEffect(() => {\n    const now = new Date()\n    setThisDate(now)\n    const getData = async () => {\n      const response = await axios.get('/api/plants/')\n      setPlantData(response.data)\n      setRightPlants(response.data)\n      console.log('clog1', response.data)\n      const randomNums = []\n      for (let i = 0; randomNums.length <= 5; i++) {\n        const num = Math.floor(Math.random() * response.data.length)\n        if (!randomNums.includes(num)) {\n          randomNums.push(num)\n        }\n      }\n      console.log(randomNums)\n      const coolPlants = response.data.filter((item, index) => {\n        return randomNums.includes(index)\n      })\n      setRandomPlants(coolPlants)\n      console.log(coolPlants)\n      // const types = response.data.map(plant => {\n      //   return plant.type\n      // })\n      // setAllTypes([...new Set(types)])\n    }\n    getData()\n    console.log('clog2', plantData)\n  }, [])\n  const handleChange = (event) => {\n    setDifficulty(Number(event.target.value))\n  }\n  const handleSearch = (event) => {\n    const searchList = plantData.filter(plant => {\n      return plant.plant_name.toUpperCase().includes(event.target.value.toUpperCase()) ||\n      plant.subspecies.toUpperCase().includes(event.target.value.toUpperCase()) ||\n      plant.type.toUpperCase().includes(event.target.value.toUpperCase())\n    })\n    setRightPlants(searchList)\n  }\n  const handleSow = (event) => {\n    setSow(Number(event.target.value))\n  }\n  const handlePlanting = (event) => {\n    setPlanting(Number(event.target.value))\n  }\n  const handleHarvest = (event) => {\n    setHarvest(Number(event.target.value))\n  }\n  return (\n    <>\n      {!plantData || !rightPlants || !randomPlants\n        ? <p> loading... </p>\n        : <>\n        <Container className=\"carousel-box\">\n          <Carousel>\n\n            {randomPlants.map(plant => {\n              return <Carousel.Item key={plant.id}>\n                <Link to={`/plants/${plant.id}`}>\n              <img\n                className=\"d-block w-100\"\n                src={plant.image}\n                alt={plant.plant_name}\n              />\n              </Link>\n              <Carousel.Caption>\n                <h3>{plant.plant_name}</h3>\n                <p>{plant.subspecies}</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n            })}\n          </Carousel>\n          </Container>\n  {/* <thead> */}\n    <div className=\"searches\">\n      <div className=\"dropdown\">\n    <Form.Label className=\"search-label\">Choose By Difficulty!</Form.Label>\n  <Form.Control as=\"select\" onChange={handleChange}>\n    <option value=\"5\">Master (All Plants)</option>\n    <option value=\"4\">Hard</option>\n    <option value=\"3\">Medium</option>\n    <option value=\"2\">Easy</option>\n    <option value=\"1\">Beginner</option>\n  </Form.Control>\n  </div>\n  <div className=\"dropdown\">\n  <Form.Label className=\"search-label\">Search for a Plant!</Form.Label>\n    <FormControl\n      placeholder=\"Search\"\n      aria-label=\"Search\"\n      aria-describedby=\"basic-addon1\"\n      onChange={handleSearch}\n    />\n  </div>\n  </div>\n  {/* <InputGroup>\n    <InputGroup.Prepend>\n      <InputGroup.Text>Search for a Plant!</InputGroup.Text>\n    </InputGroup.Prepend>\n    <FormControl as=\"textarea\" aria-label=\"Search for a Plant!\" onChange={handleSearch} />\n  </InputGroup> */}\n  {/* </tr>\n  </thead> */}\n  <Table responsive>\n  <tbody>\n    <tr>\n          {rightPlants.filter(plant => {\n            return plant.difficulty <= difficulty\n          }).map(plant => {\n            return (\n              <PlantTile\n              key={plant.id}\n              { ...plant}\n              />\n            )\n          })}\n              </tr>\n    </tbody>\n</Table>\n        </>\n      }\n    {!plantData\n      ? <p> loading... </p>\n      : <div>\n<div className=\"searches\">\n      <h2 className=\"month-scroll\">Sow in {!sow ? thisDate.toLocaleString('default', { month: 'long' }) : monthNames[sow]}:</h2>\n      <div className=\"dropdown\">\n    <Form.Label className=\"search-label\">Or Choose a Month:</Form.Label>\n  <Form.Control as=\"select\" onChange={handleSow}>\n    <option value=\"0\">January</option>\n    <option value=\"1\">February</option>\n    <option value=\"2\">March</option>\n    <option value=\"3\">April</option>\n    <option value=\"4\">May</option>\n    <option value=\"5\">June</option>\n    <option value=\"6\">July</option>\n    <option value=\"7\">August</option>\n    <option value=\"8\">September</option>\n    <option value=\"9\">October</option>\n    <option value=\"10\">November</option>\n    <option value=\"11\">December</option>\n  </Form.Control>\n  </div>\n  </div>\n  <Table responsive>\n  <tbody>\n    <tr>{!sow\n      ? plantData.filter(plant => {\n        return plant.sow_month === thisDate.getMonth()\n      }).map(plant => (\n        <PlantTile\n        key={plant.id}\n        { ...plant}\n        />\n      ))\n      : plantData.filter(plant => {\n        return plant.sow_month === sow\n      }).map(plant => (\n        <PlantTile\n        key={plant.id}\n        { ...plant}\n        />\n      ))\n    }\n    </tr>\n    </tbody>\n</Table>\n</div>\n}\n{!plantData\n  ? <p> loading... </p>\n  : <div>\n    <div className=\"searches\">\n      <h2 className=\"month-scroll\">Plant in {!planting ? thisDate.toLocaleString('default', { month: 'long' }) : monthNames[planting]}:</h2>\n      <div className=\"dropdown\">\n    <Form.Label className=\"search-label\">Or Choose a Month:</Form.Label>\n  <Form.Control as=\"select\" onChange={handlePlanting}>\n    <option value=\"0\">January</option>\n    <option value=\"1\">February</option>\n    <option value=\"2\">March</option>\n    <option value=\"3\">April</option>\n    <option value=\"4\">May</option>\n    <option value=\"5\">June</option>\n    <option value=\"6\">July</option>\n    <option value=\"7\">August</option>\n    <option value=\"8\">September</option>\n    <option value=\"9\">October</option>\n    <option value=\"10\">November</option>\n    <option value=\"11\">December</option>\n  </Form.Control>\n  </div>\n  </div>\n    <Table responsive>\n  <tbody>\n  <tr>{!planting\n    ? plantData.filter(plant => {\n      return plant.plant_month === thisDate.getMonth()\n    }).map(plant => (\n        <PlantTile\n        key={plant.id}\n        { ...plant}\n        />\n    ))\n    : plantData.filter(plant => {\n      return plant.plant_month === planting\n    }).map(plant => (\n        <PlantTile\n        key={plant.id}\n        { ...plant}\n        />\n    ))\n    }\n    </tr>\n    </tbody>\n</Table>\n</div>\n}\n{!plantData\n  ? <p> loading... </p>\n  : <div>\n    <div className=\"searches\">\n      <h2 className=\"month-scroll\">Harvest in {!harvest ? thisDate.toLocaleString('default', { month: 'long' }) : monthNames[harvest]}:</h2>\n      <div className=\"dropdown\">\n    <Form.Label className=\"search-label\">Or Choose a Month:</Form.Label>\n  <Form.Control as=\"select\" onChange={handleHarvest}>\n    <option value=\"0\">January</option>\n    <option value=\"1\">February</option>\n    <option value=\"2\">March</option>\n    <option value=\"3\">April</option>\n    <option value=\"4\">May</option>\n    <option value=\"5\">June</option>\n    <option value=\"6\">July</option>\n    <option value=\"7\">August</option>\n    <option value=\"8\">September</option>\n    <option value=\"9\">October</option>\n    <option value=\"10\">November</option>\n    <option value=\"11\">December</option>\n  </Form.Control>\n  </div>\n  </div>\n    <Table responsive>\n  <tbody>\n  <tr>{!harvest\n    ? plantData.filter(plant => {\n      return plant.harvest_month === thisDate.getMonth()\n    }).map(plant => (\n        <PlantTile\n        key={plant.id}\n        { ...plant}\n        />\n    ))\n    : plantData.filter(plant => {\n      return plant.harvest_month === harvest\n    }).map(plant => (\n        <PlantTile\n        key={plant.id}\n        { ...plant}\n        />\n    ))\n    }\n    </tr>\n    </tbody>\n</Table>\n</div>\n}\n    </>\n  )\n}\n\nexport default Home\n","import React, { useState } from 'react'\nimport { Form, Button, Container, Toast, Row } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  })\n  const [showA, setShowA] = useState(false)\n  const toggleShowA = () => setShowA(!showA)\n\n  const handleChange = (event) => {\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n  }\n\n  const history = useHistory()\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await axios.post('/api/auth/login/', formData)\n      window.localStorage.setItem('token', response.data.token)\n      window.localStorage.setItem('id', response.data.sub)\n      history.push('/profile')\n      location.reload()\n    } catch (err) {\n      setShowA(true)\n    }\n  }\n  return (\n  <Container className=\"login-box\">\n      <Form className=\"auth-form\" onSubmit={handleSubmit}>\n        <h2>Login</h2>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\"\n            className=\"text-muted\"\n            id=\"login-email\"\n            name=\"email\"\n            value={setFormData.email}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          placeholder=\"Enter password\"\n          className=\"text-muted\"\n          id=\"login-password\"\n          type=\"password\"\n          name=\"password\"\n          value={setFormData.password}\n          onChange={handleChange}\n        />\n        </Form.Group>\n        <Button className=\"auth-button\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    <Container className=\"login-toast\">\n    <Row>\n      <Toast className=\"toast-error\" show={showA} onClose={toggleShowA}>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">Woah there!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            Not valid!\n            </Toast.Body>\n        </Toast>\n        </Row>\n        </Container>\n    </Container>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { Form, Button, Container, Row, Toast } from 'react-bootstrap'\nimport axios from 'axios'\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    first_name: '',\n    last_name: '',\n    email: '',\n    username: '',\n    password: ''\n  })\n  const [showA, setShowA] = useState(false)\n  const toggleShowA = () => setShowA(false)\n  const [showB, setShowB] = useState(false)\n  const toggleShowB = () => setShowB(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [reg, setReg] = useState(false)\n\n  const handleChange = (event) => {\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await axios.post('/api/auth/register/', formData)\n      window.localStorage.setItem('token', response.data.token)\n      setReg(true)\n    } catch (err) {\n      console.log('err', err.response.data)\n      setErrorMessage(err.response.data)\n      setShowA(true)\n    }\n  }\n  return (\n  <Container className=\"login-outerbox\">\n    {reg === false\n      ? <Container className=\"login-box\">\n    <Form className=\"auth-form\" onSubmit={handleSubmit}>\n      <h2>Register</h2>\n      <Form.Group controlId=\"formBasicFirstName\">\n        <Form.Label>First Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter First Name\"\n            className=\"text-muted\"\n            id=\"register-first-name\"\n            name=\"first_name\"\n            value={setFormData.first_name}\n            onChange={handleChange}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicLastName\">\n        <Form.Label>Last Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter Last Name\"\n            className=\"text-muted\"\n            id=\"register-last-name\"\n            name=\"last_name\"\n            value={setFormData.last_name}\n            onChange={handleChange}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"\n            className=\"text-muted\"\n            id=\"register-email\"\n            name=\"email\"\n            value={setFormData.email}\n            onChange={handleChange}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n                  placeholder=\"Enter username\"\n                  className=\"text-muted\"\n                  id=\"register-username\"\n                  type=\"text\"\n                  name=\"username\"\n                  value={setFormData.username}\n                  onChange={handleChange}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n                  placeholder=\"Enter password\"\n                  className=\"text-muted\"\n                  id=\"login-password\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={setFormData.password}\n                  onChange={handleChange}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPasswordConfirmation\">\n        <Form.Label>Password Confirmation</Form.Label>\n        <Form.Control\n                  placeholder=\"Confirm password\"\n                  className=\"text-muted\"\n                  id=\"resgister-password-confirmation\"\n                  type=\"password\"\n                  name=\"password_confirmation\"\n                  value={setFormData.password_confirmation}\n                  onChange={handleChange}/>\n      </Form.Group>\n      {formData.first_name && formData.last_name && formData.email && formData.username && formData.password && formData.password_confirmation\n        ? <Button className=\"auth-button\" type=\"submit\">\n        Submit\n      </Button>\n        : <Button className=\"auth-button-disabled\" onClick={() => setShowB(true)}>\n      Submit\n    </Button>\n    }\n    </Form>\n    <Container className=\"login-toast\">\n    <Row>\n      <Toast className=\"toast-error\" show={showA} onClose={toggleShowA}>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">Woah there!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            {errorMessage.email && errorMessage.email[0]}\n            {errorMessage.password && errorMessage.password[0]}\n            {errorMessage.username && errorMessage.username[0]}\n            {errorMessage.password_confirmation && errorMessage.password_confirmation[0]}\n            </Toast.Body>\n        </Toast>\n        <Toast className=\"toast-error\" show={showB} onClose={toggleShowB}>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">Woah there!</strong>\n          </Toast.Header>\n          <Toast.Body>\n            Missing information\n            </Toast.Body>\n        </Toast>\n        </Row>\n        </Container>\n      </Container>\n      : <div className=\"please-login\">\n      <p><strong> Welcome {formData.first_name}{formData.last_name}! </strong></p>\n      <p>Registration successful</p>\n      <p>Your email address is {formData.email}</p>\n      </div>\n      }\n   </Container>\n  )\n}\n\nexport default Register\n","import React from 'react'\nimport Login from './Login'\nimport Register from './Register'\n\nconst Auth = () => {\n  return (\n\n    <div className=\"auth-container\">\n      <div className=\"auth-page\">\n      <Register/>\n      </div>\n      <div className=\"auth-page\">\n      <Login/>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { getTokenFromLocalStorage } from '../helpers/auth'\nimport { Button, Modal, Container, Image, Row, Toast } from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst Profile = () => {\n  const [userData, setUserData] = useState('')\n  const [savedPlantData, setSavedPlantData] = useState('')\n  const [wishlist, setUpdateWishlist] = useState({\n    saved_plants: []\n  })\n  const [confirm, setConfirm] = useState(null)\n  const [filter, setFilter] = useState('')\n  const history = useHistory()\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  const [itemsFromLocalStorage, setItemsFromLocalStorage] = useState([])\n  console.log(itemsFromLocalStorage, setItemsFromLocalStorage)\n  const [dateToComapre, setDateToCompare] = useState(null)\n  const [showA, setShowA] = useState(false)\n  const [needToWater, setNeedToWater] = useState([])\n\n  const toggleShowA = () => {\n    setShowA(false)\n    needToWater.map(item => {\n      return window.localStorage.removeItem(item[0])\n    })\n  }\n  setInterval(() => {\n    setDateToCompare(Date.now())\n  }, 300000)\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await axios.get('/api/plants/')\n      setSavedPlantData(response.data)\n    }\n    getData()\n    const getUser = async () => {\n      const id = window.localStorage.getItem('id')\n      const response = await axios.get(`/api/auth/${id}/`, {\n        headers: {\n          Authorization: `Bearer ${getTokenFromLocalStorage()}`\n        }\n      }\n      )\n      setUserData(response.data)\n      const getPlantsToWater = response.data.saved_plants.filter(item => {\n        const id = window.localStorage.getItem(item)\n        return id\n      })\n      setDateToCompare(Date.now())\n      console.log('PLANTS TO WATER >>>', getPlantsToWater)\n\n      const mappedGetPlantsToWater = getPlantsToWater.map(item => {\n        return window.localStorage.getItem(item)\n      })\n      setItemsFromLocalStorage(mappedGetPlantsToWater)\n\n      console.log('mappedGetPlantsToWater>>>', mappedGetPlantsToWater)\n      // console.log('get plants to water', getPlantsToWater[0].split(','))\n    }\n    getUser()\n  }, [])\n\n  const saveToLocalStorage = (event) => {\n    const today = Date.now()\n    const plantId = event.target.value\n    const plantName = event.target.name\n    const wateringFrequency = event.target.id\n    window.localStorage.setItem(plantId, [plantId, plantName, wateringFrequency, today, 'water now'])\n  }\n  // itemsFromLocalStorage.map(item =>{\n\n  // })\n  // if (!itemsFromLocalStorage) {\n  const splitItemsFromLocalStorage = itemsFromLocalStorage.map(item => {\n    console.log('item >>>>>', item)\n    const split = item.split(',')\n    const numberTimestamp = parseInt(split[3])\n    const frequency = parseInt(split[2])\n    const targetTimestamp = (frequency * 86.4 * 1000000) + numberTimestamp\n    const id = parseInt(split[0])\n    return [id, split[1], targetTimestamp]\n  })\n  console.log('splitItemsFromLocalStorage', splitItemsFromLocalStorage)\n\n  console.log(dateToComapre)\n\n  const water = splitItemsFromLocalStorage.filter(item => {\n    return item[2] < dateToComapre\n  })\n  console.log(water, setNeedToWater)\n\n  // setTimeout(() => {\n  //   clearInterval(myInterval)\n  // }, 10000)\n\n  // const myInterval = setInterval(() => {\n  //   setNeedToWater(water)\n  // }, 3000)\n\n  useEffect(() => {\n    setNeedToWater(water)\n  }, [itemsFromLocalStorage])\n  useEffect(() => {\n    if (needToWater.length > 0) setShowA(true)\n  }, [needToWater])\n  console.log('needToWater', needToWater)\n  // }\n  if (!savedPlantData || !userData) return 'loading'\n  console.log(itemsFromLocalStorage)\n\n  let arrayOfSavedPlants = []\n  // * for Each lopp to make array of parks in wishlist\n  userData.saved_plants.forEach((saved, index) => {\n    const filteredPlants = savedPlantData.filter((item) => {\n      return item.id === saved\n    })\n    arrayOfSavedPlants = [...arrayOfSavedPlants, filteredPlants]\n  })\n\n  const mappedFilteredArray = arrayOfSavedPlants.map(item => {\n    return item[0]\n  })\n\n  // * function to remove the item from the wishlist\n  const removeFromWishlist = (event) => {\n    setConfirm('confirm')\n    const filteredWishlistConst = userData.saved_plants.filter(filter => {\n      return filter !== parseFloat(event.target.value)\n    })\n    const newWishList = { [event.target.name]: filteredWishlistConst }\n    setUpdateWishlist(newWishList)\n  }\n\n  const handleConfirm = async () => {\n    const id = window.localStorage.getItem('id')\n    setConfirm('')\n    try {\n      await axios.put(`/api/auth/${id}/`,\n        wishlist, {\n          headers: {\n            Authorization: `Bearer ${getTokenFromLocalStorage()}`\n          }\n        }\n      )\n    } catch (err) {\n      console.log('error', err)\n    }\n    location.reload()\n  }\n  const handleCancel = () => {\n    setConfirm('')\n  }\n\n  return (\n    <Container className=\"profile-container\">\n      <Container className=\"user-profile-info\">\n      <h2>Your Profile</h2>\n      <Container className=\"user-profile-info-outerbox\">\n    <Container className=\"user-profile-info-innerbox\">\n        <p><strong>Name: </strong> {userData.first_name} {userData.last_name} </p>\n        <p><strong>Username: </strong> {userData.username}</p>\n      </Container>\n      <Container className=\"user-profile-info-innerbox\">\n        <p><strong>Email: </strong> {userData.email}</p>\n        <p><strong>Saved Plants: </strong>{userData.saved_plants.length}</p>\n      </Container>\n      </Container>\n      <Link to=\"/editprofile\">\n        <Button className=\"auth-button\">Edit Profile</Button>\n      </Link>\n      <Link to=\"/add\">\n        <Button className=\"auth-button\">Add a plant</Button>\n      </Link>\n      <Container className=\"saved-plants-title\">\n        <h2>Your Saved Plants</h2>\n        <p><small>Click on Plant Image for more info</small></p>\n        <input className=\"profile-search-bar\" placeholder=\"Search by Plant Type\" onChange={event => { setFilter(event.target.value.trim()) }}/>\n      </Container>\n      </Container>\n      {userData.saved_plants.length !== 0\n        ? <Container className=\"profile-plants-container\">\n          {mappedFilteredArray.filter((val) => {\n            if (filter === '') {\n              return val\n            } else if (val.type.trim().toLowerCase().includes(filter.toLowerCase())) {\n              return val\n            }\n            return null\n          }).map((item, index) => {\n            return (\n              <Container key={item.id} className=\"profile-plant\">\n                  <Container className=\"profile-plant-card\">\n                  <Link to={`/plants/${item.id}`}>\n                  <Image className=\"profile-plant-card-image\" src={item.image} alt={item.plant_name}key={item.id}/>\n                  </Link>\n                  <Container className=\"profile-plant-card-info\">\n                    <h3>{item.plant_name} / <i>{item.subspecies}</i> </h3>\n                    <p> Type: {item.type} </p>\n                    <p> Description: {item.description} </p>\n                    <Container className=\"plant-info-box\">\n                      <Container className=\"plant-info-innerbox\">\n                        <p> Sow in: {monthNames[item.sow_month]} </p>\n                        <p> Plant out in: {monthNames[item.plant_month]} </p>\n                        <p> Harvest in: {monthNames[item.harvest_month]}</p>\n                      </Container>\n                      <Container className=\"plant-info-innerbox\">\n                        <p> Sunlight: {item.sunlight} </p>\n                        <p> Soil Type: {item.soil_acidity} </p>\n                        <p> Water every: {item.watering_frequency} days </p>\n                      </Container>\n                    </Container>\n                    </Container>\n                  </Container>\n                {!confirm &&\n                <Container className=\"profile-blant-button-container\">\n                  <Button name=\"saved_plants\" className=\"auth-button\" value={item.id} onClick={removeFromWishlist} > Remove <br/> {item.plant_name}?</Button>\n                  <Button id={item.watering_frequency} name={item.plant_name} className=\"auth-button\" value={item.id} onClick={saveToLocalStorage} > Click for a watering reminder</Button>\n                </Container>\n                }\n              </Container>\n            )\n          })}\n          {confirm &&\n          <>\n            <Modal\n              show = {confirm}\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n              backdrop=\"static\"\n              keyboard=\"false\"\n            >\n            <Modal.Dialog>\n              <Modal.Header onClick={handleCancel} closeButton>\n                <Modal.Title>Delete plant from your wishlist?</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <p>  Are you sure you want to delete this from your saved plants?</p>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button onClick={handleCancel} variant=\"secondary\">Close</Button>\n                <Button onClick={handleConfirm} variant=\"primary\">Delete?</Button>\n              </Modal.Footer>\n            </Modal.Dialog>\n            </Modal>\n          </>\n          }\n        </Container>\n        : <Container className=\"no-saved-plants\">\n        <h2>You have no saved plants!</h2>\n        <Button className=\"auth-button\" onClick={() => history.push('/home')}>View Plants</Button>\n        </Container>\n      }\n\n<Container className=\"login-toast\">\n    <Row>\n      <Toast className=\"toast-error\" show={showA} onClose={toggleShowA}>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">You need to water your:</strong>\n          </Toast.Header>\n          <Toast.Body>\n           {needToWater.map(item => {\n             return <li key={item[0]}>{item[1]}</li>\n           })\n           }\n           Click the button again for another reminder!\n            </Toast.Body>\n        </Toast>\n        </Row>\n        </Container>\n    </Container>\n  )\n}\n\nexport default Profile\n","import React, { useState, useEffect } from 'react'\nimport { Button } from 'react-bootstrap'\n\nconst Title = () => {\n  const subtitles = ['For hardcore gardeners.', 'Nothing seedy... only plants.', 'Full of photos of dirty, filthy... root vegetables.']\n  const [subtitle, setSubtitle] = useState(subtitles[0])\n\n  useEffect(() => {\n    const changeSub = () => {\n      setSubtitle(subtitles[Math.floor(Math.random() * 3)])\n    }\n    changeSub()\n  }, [])\n\n  return (\n    <div className=\"titleContainer\">\n      <div className=\"imageBox\"></div>\n      <h1 className=\"subtitle\">{subtitle}</h1>\n      <Button size=\"lg\" href=\"/home\" className=\"enterButton\">Enter</Button>\n    </div>\n  )\n}\n\nexport default Title\n","import React from 'react'\nimport { Button, Card, Container } from 'react-bootstrap'\n\nconst About = () => {\n  return (\n  <Container className=\"about-container\">\n    <Container className=\"about-card\">\n      <Container className=\"about-image-container\">\n      <Card.Img fluid variant=\"top\" src=\"https://res.cloudinary.com/cornhub/image/upload/v1618923591/About/img_4304_ldpygi.jpg\"/>\n      </Container>\n      <Card.Body>\n        <Card.Title> Patrick Tapio Johnson </Card.Title>\n        <Card.Text>\n          <p>Software Developer from London, England</p>\n          <p>Likes: Cello, Dad Jokes</p>\n        </Card.Text>\n        <Container className=\"about-links\">\n          <Button className=\"about-button\" variant=\"primary\" href=\"https://www.linkedin.com/in/patrick-tapio-johnson/\" target=\"_blank\">LinkedIn</Button>\n          <Button className=\"about-button\" variant=\"primary\" href=\"https://github.com/PaddyCello\" target=\"_blank\">GitHub</Button>\n        </Container>\n      </Card.Body>\n    </Container>\n    <Container className=\"about-card\">\n      <Container className=\"about-image-container\">\n      <Card.Img fluid variant=\"top\" src=\"https://res.cloudinary.com/cornhub/image/upload/v1618756749/About/deae7c6d-be83-465f-a43e-2a63b0ad7c29_wfq8li.jpg\"/>\n      </Container>\n      <Card.Body>\n        <Card.Title> Jonty Ward </Card.Title>\n        <Card.Text>\n          <p>Software Developer from Greater Norwich Area, England</p>\n          <p>Likes: Chillis, Goats</p>\n        </Card.Text>\n        <Container className=\"about-links\">\n          <Button className=\"about-button\" href=\"https://www.linkedin.com/in/jonty-ward-b0236164/\" target=\"_blank\">LinkedIn</Button>\n          <Button className=\"about-button\" href=\"https://github.com/jonty-ward\" target=\"_blank\">GitHub</Button>\n        </Container>\n      </Card.Body>\n    </Container>\n    <Container className=\"about-card\">\n      <Container className=\"about-image-container\">\n      <Card.Img fluid variant=\"top\" src=\"https://res.cloudinary.com/cornhub/image/upload/v1618753594/About/Plant1_l8f0jv.jpg\"/>\n      </Container>\n      <Card.Body>\n        <Card.Title> Michael Henderson </Card.Title>\n        <Card.Text>\n          <p>Software Developer from London, England</p>\n          <p>Likes: Sunflowers, Kate Bush</p>\n        </Card.Text>\n        <Container className=\"about-links\">\n          <Button className=\"about-button\" variant=\"primary\" href=\"https://www.linkedin.com/in/mhenderson24/\" target=\"_blank\">LinkedIn</Button>\n          <Button className=\"about-button\" variant=\"primary\" href=\"https://github.com/Awyssa\" target=\"_blank\">GitHub</Button>\n        </Container>\n      </Card.Body>\n    </Container>\n</Container>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nconst Resources = () => {\n  return (\n    <Container className=\"resources-page\">\n      <Container className=\"spotify\">\n        <p>CornHub Spotify Playlist</p>\n        <iframe src=\"https://open.spotify.com/embed/playlist/3B73vSUPTr7RljzlpF1wcV\" width=\"400\" height=\"500\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n        <img src=\"https://res.cloudinary.com/cornhub/image/upload/v1618923742/About/mushroom_cwmuus.webp\" />\n      </Container>\n        <Container className=\"res-info\">\n          <Container className=\"resources-item\">\n          <p>Some of our Favourite Links</p>\n          </Container>\n        <Container className=\"resources-item\">\n        <a href=\"https://www.southdevonchillifarm.co.uk/\" target=\"blank\" >\n        <img src=\"https://www.southdevonchillifarm.co.uk/images/logos/1/logo.png\"/>\n        </a>\n        </Container>\n        <Container className=\"resources-item\">\n        <a href=\"https://theplantwarehouse.co.uk/\" target=\"blank\" >\n        <img src=\"https://cdn.shopify.com/s/files/1/0379/6015/5267/files/Plants_House_Logo-01_x100.png?v=1588625584\"/>\n        </a>\n        </Container>\n        <Container className=\"resources-item\">\n        <a href=\"https://n1gardencentre.co.uk/\" target=\"blank\" >\n        <img src=\"https://n1gardencentre.co.uk/wp-content/uploads/2019/02/logo-3.png\"/>\n        </a>\n        </Container>\n        <Container className=\"resources-item\">\n        <a href=\"https://www.otterfarm.co.uk/\" target=\"blank\" >\n        <img src=\"https://www.otterfarm.co.uk/wp-content/uploads/2016/10/otterfarmlogo-grey.png\"/>\n        </a>\n        </Container>\n      </Container>\n    </Container>\n  )\n}\n\nexport default Resources\n","import React from 'react'\nimport { Modal } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <Modal.Footer>\n      <p>this is the footer</p>\n    </Modal.Footer>\n  )\n}\n\nexport default Footer\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { Col, Row } from 'react-bootstrap'\n\nconst CurrentWeather = ({ weather }) => {\n  return (\n    <div className=\"day-weather\">\n      <>\n      <Row xs={2} md={4} lg={6}>\n        <Col>\n          <img src={`http://openweathermap.org/img/wn/${weather.current.weather[0].icon}@2x.png`} alt={weather.current.weather[0].description}/>\n          <p> Weather: {weather.current.weather[0].main} </p>\n        </Col>\n        <Col>\n          <p> Temp: {Math.round((weather.current.temp - 273.15) * 10) / 10} &deg;C  </p>\n          <p>Humidity: {weather.current.humidity} % </p>\n          <p> Sunrise { new Date(weather.current.sunrise * 1000).toLocaleTimeString() }</p>\n          <p> Sunset { new Date(weather.current.sunset * 1000).toLocaleTimeString() }</p>\n        </Col>\n      </Row>\n      </>\n    </div>\n  )\n}\n\nexport default CurrentWeather\n","/* eslint-disable react/prop-types */\n\nimport React from 'react'\nimport { Col, Container, Row, Table } from 'react-bootstrap'\n\nconst WeekWeather = ({ weather }) => {\n  return (\n  <>\n    <p className=\"scroll-message-weather\">Scoll on the box to see more weather information!</p>\n      <Table responsive>\n    <tr>\n    <div className=\"weatherContainer\">\n\n<div className=\"day\">\n\n      { weather.daily.map((item, i) => (\n\n        <>\n                  <div className=\"weather-day\" key={i}>\n          <Container>\n          <>\n                  <Row>\n                    <Col>\n                      <p>{ new Date(item.dt * 1000).toLocaleDateString() }</p>\n                      <img src={`http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`} alt={item.weather[0].description}/>\n                      <p>{item.weather[0].description}</p>\n                    </Col>\n                    <Col>\n                      <p>Day:  { Math.round((item.temp.day - 273.15) * 10) / 10 } &deg;C,<br/> Feels like: { Math.round((item.feels_like.day - 273.15) * 10) / 10 } &deg;C  </p>\n                      <p>Evening: { Math.round((item.temp.eve - 273.15) * 10) / 10 } &deg;C,<br/> Feels like: { Math.round((item.feels_like.eve - 273.15) * 10) / 10 } &deg;C  </p>\n                    </Col>\n\n                  <Col>\n                    <p>Max: { Math.round((item.temp.max - 273.15) * 10) / 10 } &deg;C <br/>Min: { Math.round((item.temp.min - 273.15) * 10) / 10 } &deg;C  </p>\n                    <p>Humidity: { item.humidity}%</p>\n                    <p> Sunrise { new Date(item.sunrise * 1000).toLocaleTimeString() }</p>\n                    <p> Sunset { new Date(item.sunset * 1000).toLocaleTimeString() }</p>\n\n              </Col>\n            </Row>\n          </>\n        </Container>\n        </div>\n        </>\n      ))}\n      </div>\n      </div>\n    </tr>\n</Table>\n</>\n\n  )\n}\n\nexport default WeekWeather\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nconst WeatherJobs = ({ weather }) => {\n  const [savedPlantData, setSavedPlantData] = useState('')\n  useEffect(() => {\n    const getData = async () => {\n      const response = await axios.get('/api/plants/')\n      setSavedPlantData(response.data)\n    }\n    getData()\n  }, [])\n  console.log('savedPlantData', savedPlantData)\n\n  // Working out the average temperature for the week\n  const weeklyDayTempAverage = Math.round((weather.daily.map(item => {\n    return item.temp.day\n  }).reduce((acc, num) => {\n    return acc + num\n  }, 0) / 8) - 273.15)\n  console.log('weeklyDayTempAverage >>>', weeklyDayTempAverage)\n\n  // array of plants that can be germinated at this temp\n\n  if (!savedPlantData) return ''\n  const plantsToGerminateBasedOnTemp = savedPlantData.filter(item => {\n    return item.germination_temperature <= weeklyDayTempAverage\n  })\n\n  return (\n    <div>\n      <h5 className=\"weather-jobs-description\">The average temperature this week is going to be {weeklyDayTempAverage} &deg;C, here are some ideas of what you can germinate outside!  </h5>\n      < div className=\"wearther-jobs-carousel\">\n      {plantsToGerminateBasedOnTemp.map(item => {\n        return (\n          <div key={item.id} className=\"profile-wishlist-column\">\n        <Link to={`/plants/${item.id}`}>\n         <p> {item.plant_name} </p>\n         <img className=\"chilli-image-profile\" src={item.image} alt={item.plant_name}key={item.id}/>\n         </Link>\n          </div>\n        )\n      })}\n      </div>\n    </div>\n  )\n}\n\nexport default WeatherJobs\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport CurrentWeather from '../weather/CurrentWeather'\nimport WeekWeather from '../weather/WeekWeather'\nimport WeatherJobs from '../weather/WeatherJobs'\nconst Weather = () => {\n  const [weather, setWeather] = useState(null)\n  const [forecast, setForecast] = useState('current')\n  const [viewport, setViewport] = useState('')\n  const [formData, setFormData] = useState('London')\n  const [inputLocationChoice, setInputLocationChoice] = useState(null)\n  // const [currentLocation, setCurrentLocation] = useState(null)\n  const [reveseGeoLocation, setReverseGeoLocation] = useState(null)\n  // const mapboxtoken = process.env.MAPBOX_ACCESS_TOKEN\n\n  // handlers for the manual location input form\n  const handleChange = (event) => {\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setInputLocationChoice(formData.location)\n    // setCurrentLocation(formData.location)\n  }\n\n  // this is creating latitude and longitude based on the users current location\n  useEffect(() => {\n    // console.log(window.navigator)\n    setTimeout(() => {\n      window.navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', position)\n        const { longitude, latitude } = position.coords\n        setViewport({ longitude, latitude })\n      })\n    }, 300)\n  }, [])\n\n  console.log('VIEWPORT>>>>>', viewport)\n\n  // This is the request to geocode a place name into long and lat- i have made this link ot the form\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get(`https://api.mapbox.com/geocoding/v5/mapbox.places/${inputLocationChoice}.json?access_token=pk.eyJ1IjoiandhcmQwMzk1IiwiYSI6ImNrbXFnM3l3azJvNHgyb256N2U3NGY1NnUifQ.j9Q8uNoEEO0GBonf6TLoew`)\n      setViewport({ longitude: data.features[0].geometry.coordinates[0], latitude: data.features[0].geometry.coordinates[1] })\n    }\n    getData()\n  }, [inputLocationChoice])\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get(`https://api.mapbox.com/geocoding/v5/mapbox.places/${viewport.longitude},${viewport.latitude}.json?access_token=pk.eyJ1IjoiandhcmQwMzk1IiwiYSI6ImNrbXFnM3l3azJvNHgyb256N2U3NGY1NnUifQ.j9Q8uNoEEO0GBonf6TLoew`)\n      setReverseGeoLocation(data)\n    }\n    getData()\n  }, [viewport])\n\n  // this is the get request for the weather data for the location we have specified\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${viewport.latitude}&lon=${viewport.longitude}&exclude=hourly,minutely&appid=c7b22e378e8404d1ac5d214062e5f766`)\n      setWeather(data)\n    }\n    getData()\n  }, [viewport])\n\n  // This allows us to switch between current weather and 7 day forecast\n  const handleWeather = (event) => {\n    if (event.target.value === 'current') setForecast('current')\n    if (event.target.value === 'week') setForecast('week')\n  }\n\n  const weatherForecastFunction = () => {\n    if (forecast === 'week') {\n      return <WeekWeather\n        weather = {weather}\n      />\n    }\n  }\n\n  if (!weather || !reveseGeoLocation) return 'Loading'\n  console.log('reveseGeoLocation', reveseGeoLocation)\n  return (\n<>\n\n<Container className=\"weather-button-container\">\n  {`${reveseGeoLocation.features[0].text}, ${reveseGeoLocation.features[2].text}, ${reveseGeoLocation.features[3].text} `}\n    <Form className=\"select-location-form\" onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicLocation\">\n        <Form.Control type=\"text\" placeholder=\"Enter location\"\n            className=\"text-muted\"\n            id=\"location\"\n            name=\"location\"\n            value={setFormData.location}\n            onChange={handleChange}/>\n      </Form.Group>\n      <Button className=\"weather-button\" type=\"submit\">\n        Submit\n      </Button>\n      <div className=\"forecast-buttons-container\">\n        <Button className=\"weather-button\" value=\"current\" onClick={handleWeather}>Current Weather</Button>\n        <div className=\"or\"></div>\n        <Button className=\"weather-button\" value=\"week\"onClick={handleWeather}>7 Day Forecast</Button>\n      </div>\n      </Form>\n      </Container>\n      {/* <p>{currentLocation}</p> */}\n    <div className=\"week-weather\">\n      {/* <div className=\"forecast-buttons-container\">\n        <Button className=\"weather-button\" value=\"current\" onClick={handleWeather}>Current Weather</Button>\n        <div className=\"or\"></div>\n        <Button className=\"weather-button\" value=\"week\"onClick={handleWeather}>7 Day Forecast</Button>\n      </div> */}\n\n      {forecast === 'current'\n        ? <CurrentWeather\n          weather = {weather}\n        />\n        : weatherForecastFunction()\n      }\n    </div>\n\n    <WeatherJobs\n    weather = {weather}\n    />\n    </>\n\n  )\n}\n\nexport default Weather\n","import React, { useState, useEffect } from 'react'\nimport { getTokenFromLocalStorage } from '../helpers/auth'\nimport { Form, Button, Container, Modal, Toast } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n// import { ImageUploadField } from './ImageUploadField'\nconst EditUserProfile = () => {\n  const [showA, setShowA] = useState(false)\n  const toggleShowA = () => setShowA(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [formData, setFormData] = useState({\n    email: '',\n    username: '',\n    first_name: '',\n    last_name: ''\n  })\n  const history = useHistory()\n  const [deleteCount, setDeleteCount] = useState('')\n  const handleDelete = () => {\n    setDeleteCount('delete')\n  }\n  const handleClose = () => {\n    setDeleteCount('')\n  }\n  const handleLogout = () => {\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('id')\n    history.push('/')\n    location.reload()\n  }\n  const handleDeleteConfirm = async () => {\n    const id = window.localStorage.getItem('id')\n    await axios.delete(`/api/auth/${id}/`, {\n      headers: {\n        Authorization: `Bearer ${getTokenFromLocalStorage()}`\n      }\n    }\n    )\n    handleLogout()\n  }\n  useEffect(() => {\n    const getUser = async () => {\n      const id = window.localStorage.getItem('id')\n      const response = await axios.get(`/api/auth/${id}/`, {\n        headers: {\n          Authorization: `Bearer ${getTokenFromLocalStorage()}`\n        }\n      }\n      )\n      setFormData(response.data)\n    }\n    getUser()\n  }, [])\n  const handleChange = (event) => {\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    try {\n      const id = window.localStorage.getItem('id')\n      await axios.put(`/api/auth/${id}/`,\n        formData, {\n          headers: {\n            Authorization: `Bearer ${getTokenFromLocalStorage()}`\n          }\n        }\n      )\n      history.push(`/profile/${id}/`)\n    } catch (err) {\n      console.log(err.response.data)\n      setErrorMessage(err.response.data)\n      setShowA(true)\n    }\n  }\n\n  const profileimg = formData.profile_image\n  console.log(profileimg)\n  return (\n  <Container className=\"edit-profile-container\">\n    <Form className=\"edit-profile-form\" onSubmit={handleSubmit}>\n    <h2>Edit Profile</h2>\n      <Form.Group >\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"\n            className=\"text-muted\"\n            id=\"edit-email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}/>\n      </Form.Group>\n      <Form.Group >\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n                  placeholder=\"Enter username\"\n                  className=\"text-muted\"\n                  id=\"edit-username\"\n                  type=\"text\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleChange}/>\n      </Form.Group>\n      <Form.Group >\n        <Form.Label>First Name</Form.Label>\n        <Form.Control\n                  placeholder=\"Edit first name\"\n                  className=\"text-muted\"\n                  id=\"edit-first-name\"\n                  type=\"text\"\n                  name=\"first_name\"\n                  value={formData.first_name}\n                  onChange={handleChange}/>\n      </Form.Group>\n      <Form.Group >\n        <Form.Label>Last Name</Form.Label>\n        <Form.Control\n                  placeholder=\"Edit last name\"\n                  className=\"text-muted\"\n                  id=\"edit-last-name\"\n                  type=\"text\"\n                  name=\"last_name\"\n                  value={formData.last_name}\n                  onChange={handleChange}/>\n      </Form.Group>\n      <Container>\n      <Toast className=\"toast-error\" show={showA} onClose={toggleShowA}>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">Woah there!</strong>\n          </Toast.Header>\n          <Toast.Body className=\"toast.body\">\n            {errorMessage.email && errorMessage.email[0]}\n            {errorMessage.password && errorMessage.password[0]}\n            {errorMessage.username && errorMessage.username[0]}\n            {errorMessage.password_confirmation && errorMessage.password_confirmation[0]}\n            </Toast.Body>\n        </Toast>\n      </Container>\n      {/* <Form.Group >\n        <Form.Label>Profile Image</Form.Label>\n        <ImageUploadField\n            type=\"text\"\n            value={formData.profile_image}\n            name=\"profile_image\"\n            onChange={handleChange}\n          />\n      </Form.Group> */}\n      {/* <Form.Group >\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n                  placeholder=\"Enter password\"\n                  className=\"text-muted\"\n                  id=\"edit-password\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}/>\n      </Form.Group>\n      <Form.Group >\n        <Form.Label>Password Confirmation</Form.Label>\n        <Form.Control\n                  placeholder=\"Confirm password\"\n                  className=\"text-muted\"\n                  id=\"eddit-password-confirmation\"\n                  type=\"password\"\n                  name=\"password_confirmation\"\n                  value={formData.password_confirmation}\n                  onChange={handleChange}/>\n      </Form.Group> */}\n      {!deleteCount &&\n      <Container className=\"edit-profile-buttons\">\n      {formData.first_name && formData.last_name && formData.email && formData.username\n        ? <Button className=\"edit-profile-button auth-button\" type=\"submit\">\n        Submit\n      </Button>\n        : <Button className=\"edit-profile-button auth-button\" disabled=\"true\">\n      Submit\n    </Button>\n      }\n      <Button className=\"edit-profile-button auth-button\" variant=\"danger\" onClick={handleDelete} type=\"submit\">\n       Delete profile\n      </Button>\n      </Container>\n    } <Button className=\"auth-button\" onClick={() => history.goBack()}>Back to Profile</Button>\n    {deleteCount &&\n    <>\n   <Modal\n    show = {deleteCount}\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    backdrop=\"static\"\n    keyboard=\"false\"\n   >\n    <Modal.Dialog>\n      <Modal.Header onClick={handleClose} closeButton>\n        <Modal.Title>Delete your profile?</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>  Are you sure you want to delete your profile?</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={handleClose} variant=\"secondary\">Close</Button>\n        <Button onClick={handleDeleteConfirm} variant=\"primary\">Delete?</Button>\n      </Modal.Footer>\n  </Modal.Dialog>\n</Modal>\n   </>\n    }\n    </Form>\n   </Container>\n  )\n}\nexport default EditUserProfile\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { getTokenFromLocalStorage } from '../helpers/auth'\nimport axios from 'axios'\n\nconst PlantWishList = ({ plantId, userData }) => {\n  console.log('plant id', plantId)\n  const [wishlist] = useState({\n    saved_plants: [...userData.saved_plants, plantId]\n  })\n  const [savedText, setSavedText] = useState('Save to Profile')\n\n  if (!wishlist) return ''\n  const addToWishlist = async () => {\n    const id = window.localStorage.getItem('id')\n    await axios.put(\n          `/api/auth/${id}/`,\n          wishlist, {\n            headers: {\n              Authorization: `Bearer ${getTokenFromLocalStorage()}`\n            }\n          }\n    )\n    setSavedText('Saved!')\n  }\n  return (\n    <Button variant=\"primary\" className=\"about-button\" size=\"sm\" onClick={addToWishlist}>\n      {savedText}\n    </Button>\n  )\n}\nexport default PlantWishList\n","import React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport { getTokenFromLocalStorage } from '../helpers/auth'\nimport PlantWishList from './PlantWishList'\nimport { Button } from 'react-bootstrap'\n\nconst PlantShow = () => {\n  const [onePlant, setOnePlant] = useState(null)\n  const [userData, setUserData] = useState(null)\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  const params = useParams()\n  const history = useHistory()\n  useEffect(() => {\n    const getOnePlant = async () => {\n      const response = await axios.get(`/api/plants/${params.id}/`)\n      setOnePlant(response.data)\n    }\n    getOnePlant()\n    console.log(setUserData)\n  }, [])\n  useEffect(() => {\n    if (!window.localStorage.getItem('id')) {\n      console.log('logged out')\n    } else {\n      const getUser = async () => {\n        const id = window.localStorage.getItem('id')\n        const response = await axios.get(`/api/auth/${id}/`, {\n          headers: {\n            Authorization: `Bearer ${getTokenFromLocalStorage()}`\n          }\n        }\n        )\n        setUserData(response.data)\n      }\n      getUser()\n    }\n  }, [])\n\n  const handleClick = () => {\n    console.log(history)\n    history.goBack()\n  }\n  const handleLog = () => {\n    history.push('/auth')\n  }\n  if (!onePlant) return <h1>Loading</h1>\n  console.log('user data', userData)\n  console.log('plantData', onePlant)\n  return (\n    <div className=\"plantshow\">\n    <h2>{onePlant.plant_name}</h2>\n    <h3>{onePlant.type}</h3>\n    <h3 className=\"science\">{onePlant.subspecies}</h3>\n    <img src={onePlant.image} />\n    <p className=\"science\">{onePlant.description}</p>\n    {onePlant.sow_month !== 12\n      ? <p>Sow in: {monthNames[onePlant.sow_month]}</p>\n      : <p></p>\n}\n{onePlant.plant_month !== 12\n  ? <p>Plant out in: {monthNames[onePlant.plant_month]}</p>\n  : <p></p>\n}\n{onePlant.harvest_month !== 12\n  ? <p>Harvest in: {monthNames[onePlant.harvest_month]}</p>\n  : <p></p>\n}\n    <p>Sunlight requirements: {onePlant.sunlight}</p>\n    <p>Soil type: {onePlant.soil_acidity}</p>\n    {onePlant.watering_frequency > 0\n      ? <p>Water every {onePlant.watering_frequency} days</p>\n      : <p></p>\n}\n    {onePlant.fertilizing_frequency > 0\n      ? <p>Fertilize every {onePlant.fertilizing_frequency} days with {onePlant.fertilizer_type}</p>\n      : <p>Fertilize once before sowing with {onePlant.fertilizer_type}</p>\n    }\n    {onePlant.germination_temperature !== 1000\n      ? <p>Ideal germination temperature: {onePlant.germination_temperature}°C</p>\n      : <p></p>\n}\n    <p>Difficulty rating: {onePlant.difficulty}/5</p>\n    {onePlant.verified_by_admin === false\n      ? <p className=\"not-yet\">Not yet verified by CornHub</p>\n      : <p></p>\n    }\n    <div className=\"button-holder\">\n    {!userData\n      ? <Button variant=\"primary\" className=\"about-button\" size=\"sm\" onClick={handleLog}>\n      Log in to Save!\n    </Button>\n      : <PlantWishList\n        userData={userData}\n        plantId={params.id}\n       />\n}\n<Button variant=\"primary\" className=\"about-button\" size=\"sm\" onClick={handleClick}>\n      Back\n    </Button>\n    </div>\n    </div>\n  )\n}\nexport default PlantShow\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport { Button, Container } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nexport default function ReactPayPal ({ confirmedChekoutAmount }) {\n  const [paid, setPaid] = useState(false)\n  const [error, setError] = useState(null)\n  const paypalRef = React.useRef()\n  const history = useHistory()\n  console.log('confirmed-checkout amout on the paypal form page', confirmedChekoutAmount)\n\n  // To show PayPal buttons once the component loads\n  React.useEffect(() => {\n    window.paypal\n      .Buttons({\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            intent: 'CAPTURE',\n            purchase_units: [\n              {\n                description: 'Your description',\n                amount: {\n                  currency_code: 'GBP',\n                  value: confirmedChekoutAmount\n                }\n              }\n            ]\n          })\n        },\n        onApprove: async (data, actions) => {\n          const order = await actions.order.capture()\n          setPaid(true)\n          console.log(order)\n        },\n        onError: (err) => {\n          setError(err)\n          console.error(err)\n        }\n      })\n      .render(paypalRef.current)\n  }, [])\n\n  // If the payment has been made\n  if (paid) {\n    return (\n    <Container className=\"paypal-checkout-container\">\n     <h2>Payment successful!</h2>\n     <h4>Click the button below to take you to the homepage!</h4>\n      <Button className=\"auth-button\" onClick={() => history.push('/home')}>Back to home page?</Button>\n    </Container>\n    )\n  }\n\n  // If any error occurs\n  if (error) {\n    return <div>Error Occurred in processing payment.! Please try again.</div>\n  }\n\n  // Default Render\n  return (\n    <>\n\n    <Container className=\"paypal-checkout-container\">\n      <h4>Total Amount in GBP: £  {confirmedChekoutAmount}</h4>\n      <div ref={paypalRef} />\n    </Container>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport ReactPayPal from './ReactPayPal'\nimport { Button, Container, Form } from 'react-bootstrap'\n\nconst Paypal = () => {\n  const [checkout, setCheckout] = useState(false)\n  const [donateAmount, setDonateAmount] = useState(0)\n  const [confirmedChekoutAmount, setConfirmedCheckoutAmount] = useState(0)\n  const [toggleDonationAmount, setToggleDonationAmount] = useState(null)\n\n  const handleChange = (event) => {\n    const newFormData = { ...checkout, [event.target.name]: event.target.value }\n    setDonateAmount(newFormData)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setConfirmedCheckoutAmount(parseFloat(donateAmount.amount))\n    setToggleDonationAmount(1)\n    // setCurrentLocation(formData.location)\n  }\n\n  console.log('confirmedChekoutAmount>>>>>', confirmedChekoutAmount)\n\n  console.log(donateAmount, setDonateAmount)\n\n  return (\n<>\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {(checkout === true)\n          ? <div className=\"payment-div\">\n            <ReactPayPal\n            confirmedChekoutAmount = {confirmedChekoutAmount}\n            />\n          </div>\n\n          : <div>\n            <Container className=\"paypal-checkout-container\">\n              <h1>Support our project</h1>\n              <p>This website is run by a dedicated team of volunteers! If you would like to support our campaign, please donate below!</p>\n              <Form className=\"select-location-form\" onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicLocation\">\n                  <Form.Control type=\"text\" placeholder=\"Enter donation amount\"\n                      className=\"text-muted\"\n                      id=\"location\"\n                      name=\"amount\"\n                      value={setDonateAmount.amount}\n                      onChange={handleChange}/>\n                </Form.Group>\n                {!toggleDonationAmount\n                  ? <Button className=\"donate-button checkout-button\" type=\"submit\"> Confirm  Amount?</Button>\n                  : <Button className=\"donate-button checkout-button\" type=\"submit\"> Change  Amount?</Button>\n                }\n              </Form>\n              <Button onClick={() => { setCheckout(true) }} className=\"checkout-button\">Checkout with PayPal</Button>\n\n            </Container>\n          </div>\n        }\n      </header>\n    </div>\n    </>\n  )\n}\n\nexport default Paypal\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport { getTokenFromLocalStorage } from '../helpers/auth'\nimport { useHistory } from 'react-router-dom'\n\nconst NewPlant = () => {\n  const [formData, setFormData] = useState({\n    plant_name: '',\n    subspecies: '',\n    type: '',\n    sow_month: 12,\n    plant_month: 12,\n    harvest_month: 12,\n    sunlight: '',\n    soil_acidity: '',\n    watering_frequency: 0,\n    fertilizing_frequency: 1000,\n    fertilizer_type: '',\n    germination_temperature: 0,\n    image: '',\n    description: '',\n    difficulty: 5,\n    owner: '',\n    verified_by_admin: false\n  })\n  const [success, setSuccess] = useState(false)\n  const [showA, setShowA] = useState(false)\n  const history = useHistory()\n  const handleChange = (event) => {\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n  }\n  const handleMonth = (event) => {\n    const newFormData = { ...formData, [event.target.name]: Number(event.target.value) }\n    console.log(newFormData)\n    setFormData(newFormData)\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await axios.post('/api/plants/', formData, {\n        headers: {\n          Authorization: `Bearer ${getTokenFromLocalStorage()}`\n        }\n      })\n      console.log(response)\n      setSuccess(true)\n      setShowA(false)\n    } catch (err) {\n      console.log('err', err.response.data)\n      setShowA(true)\n    }\n  }\n  const handleClick = () => {\n    history.goBack()\n  }\n  const handleMore = () => {\n    setSuccess(false)\n  }\n\n  return (\n    <Container className=\"login-box add-plant\">\n      {!success\n        ? <Form className=\"auth-form\" onSubmit={handleSubmit}>\n        <h2>Help us make our app better by contributing more plants.</h2>\n        <Form.Group controlId=\"formBasicName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter plant name\"\n            className=\"text-muted\"\n            id=\"post-plant-name\"\n            name=\"plant_name\"\n            value={setFormData.plant_name}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicSubspecies\">\n        <Form.Label>Subspecies</Form.Label>\n        <Form.Control\n          placeholder=\"Enter subspecies\"\n          className=\"text-muted\"\n          id=\"post-plant-subspecies\"\n          type=\"text\"\n          name=\"subspecies\"\n          value={setFormData.subspecies}\n          onChange={handleChange}\n        />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicType\">\n          <Form.Label>Type</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter type of plant\"\n            className=\"text-muted\"\n            id=\"post-plant-type\"\n            name=\"type\"\n            value={setFormData.type}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicSowMonth\">\n        <Form.Label>Sowing Month</Form.Label>\n        {/* <Form.Control\n          placeholder=\"Enter sowing month\"\n          className=\"text-muted\"\n          id=\"post-plant-sow-month\"\n          type=\"number\"\n          name=\"sow_month\"\n          value={setFormData.sow_month}\n          onChange={handleChange}\n        /> */}\n        <Form.Control\n        as=\"select\"\n        name=\"sow_month\"\n        onChange={handleMonth}>\n    <option value=\"12\">Please select</option>\n    <option value=\"0\">January</option>\n    <option value=\"1\">February</option>\n    <option value=\"2\">March</option>\n    <option value=\"3\">April</option>\n    <option value=\"4\">May</option>\n    <option value=\"5\">June</option>\n    <option value=\"6\">July</option>\n    <option value=\"7\">August</option>\n    <option value=\"8\">September</option>\n    <option value=\"9\">October</option>\n    <option value=\"10\">November</option>\n    <option value=\"11\">December</option>\n  </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPlantMonth\">\n        <Form.Label>Planting Month</Form.Label>\n        {/* <Form.Control\n          placeholder=\"Enter planting month\"\n          className=\"text-muted\"\n          id=\"post-plant-plant-month\"\n          type=\"number\"\n          name=\"plant_month\"\n          value={setFormData.plant_month}\n          onChange={handleChange}\n        /> */}\n        <Form.Control\n        as=\"select\"\n        name=\"plant_month\"\n        onChange={handleMonth}>\n    <option value=\"12\">Please select</option>\n    <option value=\"0\">January</option>\n    <option value=\"1\">February</option>\n    <option value=\"2\">March</option>\n    <option value=\"3\">April</option>\n    <option value=\"4\">May</option>\n    <option value=\"5\">June</option>\n    <option value=\"6\">July</option>\n    <option value=\"7\">August</option>\n    <option value=\"8\">September</option>\n    <option value=\"9\">October</option>\n    <option value=\"10\">November</option>\n    <option value=\"11\">December</option>\n    </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicHarvestMonth\">\n        <Form.Label>Harvesting Month</Form.Label>\n        {/* <Form.Control\n          placeholder=\"Enter harvesting month\"\n          className=\"text-muted\"\n          id=\"post-plant-harvest-month\"\n          type=\"number\"\n          name=\"harvest_month\"\n          value={setFormData.harvest_month}\n          onChange={handleChange}\n        /> */}\n         <Form.Control\n        as=\"select\"\n        name=\"harvest_month\"\n        onChange={handleMonth}>\n    <option value=\"12\">Please select</option>\n    <option value=\"0\">January</option>\n    <option value=\"1\">February</option>\n    <option value=\"2\">March</option>\n    <option value=\"3\">April</option>\n    <option value=\"4\">May</option>\n    <option value=\"5\">June</option>\n    <option value=\"6\">July</option>\n    <option value=\"7\">August</option>\n    <option value=\"8\">September</option>\n    <option value=\"9\">October</option>\n    <option value=\"10\">November</option>\n    <option value=\"11\">December</option>\n    </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicSunlight\">\n          <Form.Label>Sunlight Requirements</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter sunlight requirements\"\n            className=\"text-muted\"\n            id=\"post-plant-sunlight\"\n            name=\"sunlight\"\n            value={setFormData.sunlight}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicAcidity\">\n        <Form.Label>Soil Acidity Requirements</Form.Label>\n        <Form.Control\n          placeholder=\"Enter soil acidity requirements\"\n          className=\"text-muted\"\n          id=\"post-plant-acidity\"\n          type=\"text\"\n          name=\"soil_acidity\"\n          value={setFormData.soil_acidity}\n          onChange={handleChange}\n        />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicWatering\">\n        <Form.Label>Watering Frequency</Form.Label>\n        <Form.Control\n          placeholder=\"Enter watering frequency in days\"\n          className=\"text-muted\"\n          id=\"post-plant-plant-watering\"\n          min=\"1\"\n          type=\"number\"\n          name=\"watering_frequency\"\n          value={setFormData.watering_frequency}\n          onChange={handleChange}\n        />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicFertFreq\">\n        <Form.Label>Fertilizing Frequency (enter 0 if only once before sowing)</Form.Label>\n        <Form.Control\n          placeholder=\"Enter fertilizing frequency in days\"\n          className=\"text-muted\"\n          id=\"post-plant-fert-freq\"\n          min=\"0\"\n          type=\"number\"\n          name=\"fertilizing_frequency\"\n          value={setFormData.fertilizing_frequency}\n          onChange={handleChange}\n        />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicFertType\">\n          <Form.Label>Type of Fertilizer Required</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter fertilizer requirements\"\n            className=\"text-muted\"\n            id=\"post-plant-fert-type\"\n            name=\"fertilizer_type\"\n            value={setFormData.fertilizer_type}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicGermination\">\n        <Form.Label>Germination Temperature</Form.Label>\n        <Form.Control\n          placeholder=\"Enter germination temperature in Celsius\"\n          className=\"text-muted\"\n          id=\"post-plant-germination\"\n          min=\"0\"\n          type=\"number\"\n          name=\"germination_temperature\"\n          value={setFormData.germination_temperature}\n          onChange={handleChange}\n        />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicImage\">\n        <Form.Label>Add URL For Plant Image</Form.Label>\n        <Form.Control\n          placeholder=\"Enter image url\"\n          className=\"text-muted\"\n          id=\"post-plant-image\"\n          type=\"text\"\n          name=\"image\"\n          value={setFormData.image}\n          onChange={handleChange}\n        />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicDescription\">\n    <Form.Label>Add a Description of Your Plant</Form.Label>\n    <Form.Control\n    as=\"textarea\"\n    rows={3}\n    placeholder=\"Enter description\"\n    className=\"text-muted\"\n    type=\"text\"\n    name=\"description\"\n    value={setFormData.description}\n    onChange={handleChange}\n     />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicDifficulty\">\n        <Form.Label>Difficulty Out of Five</Form.Label>\n        <Form.Control\n          placeholder=\"Enter difficulty (5 if left blank)\"\n          className=\"text-muted\"\n          id=\"post-plant-difficulty\"\n          min=\"1\"\n          max=\"5\"\n          type=\"number\"\n          name=\"difficulty\"\n          value={setFormData.difficulty}\n          onChange={handleChange}\n        />\n        </Form.Group>\n        <Button className=\"auth-button\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n        : <div className=\"success\">\n      <h1>Thanks so much!</h1>\n      <br></br>\n      <h2>Add another?</h2>\n      <Button className=\"auth-button\" type=\"button\" onClick={handleMore}>\n          Add More!\n        </Button>\n        </div>\n        }\n        {!showA\n          ? <p></p>\n          : <p className=\"not-yet\">Oops, I think you missed something.</p>\n        }\n      <Button className=\"auth-button back-button\" type=\"button\" onClick={handleClick}>\n          Back to Profile\n        </Button>\n       </Container>\n  )\n}\nexport default NewPlant\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport MyNavbar from './components/Navbar.js'\nimport Home from './components/Home.js'\nimport Auth from './auth/Auth'\nimport Profile from './components/Profile'\nimport Title from './components/Title'\nimport About from './components/About'\nimport Resources from './components/Resources'\nimport Footer from './components/Footer'\nimport Weather from './components/Weather'\nimport EditUserProfile from './components/EditUserProfile'\nimport PlantShow from './components/PlantShow.js'\nimport Paypal from './components/Paypal'\nimport NewPlant from './components/NewPlant.js'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path =\"/\">\n          <Title/>\n        </Route>\n        <Route path=\"/add\">\n          <NewPlant />\n        </Route>\n        <div>\n        <MyNavbar />\n        <Route path = \"/plants/:id\">\n          <PlantShow />\n        </Route>\n        <Route exact path =\"/home\">\n          <Home/>\n          </Route>\n        <Route exact path =\"/auth\">\n          <Auth/>\n        </Route>\n        <Route exact path =\"/profile\">\n          <Profile/>\n        </Route>\n        <Route exact path =\"/profile/:id\">\n          <Profile/>\n        </Route>\n        <Route path =\"/weather\">\n          <Weather/>\n        </Route>\n        <Route path =\"/editprofile\">\n          <EditUserProfile/>\n        </Route>\n        <Route exact path =\"/about\">\n          <About />\n        </Route>\n        <Route exact path =\"/Resources\">\n          <Resources />\n        </Route>\n        <Route exact path =\"/paypal\">\n          <Paypal />\n        </Route>\n        </div>\n        <Footer />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}